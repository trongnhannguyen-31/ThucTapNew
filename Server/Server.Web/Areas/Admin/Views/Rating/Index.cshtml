@using Phoenix.Server.Services.Database;
@section Scripts{
    <script type="text/javascript" src="~/assets/js/tabulator.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
}
@section Breadcrumb{
    <div class="-intro-x breadcrumb mr-auto hidden sm:flex">
        <span>Chương trình</span> <i data-feather="chevron-right" class="breadcrumb__icon"></i>
        <a href="#" class="breadcrumb--active">Người dùng đánh giá</a>
    </div>
}
@Html.AntiForgeryToken()
<div class="intro-y flex flex-col sm:flex-row items-center mt-8">
    <h2 class="text-lg font-medium mr-auto">
        Người dùng đánh giá
    </h2>
@*    <div class="w-full sm:w-auto flex mt-4 sm:mt-0">
        <a href="@Url.Action("Create","Project")" class="btn btn-primary text-white shadow-md mr-2">Thêm mới</a>
    </div>*@
</div>
<div class="grid gap-6 mt-5">
    <div class="intro-y box p-5">
        <div class="grid grid-cols-12 gap-2">
            <div class="col-span-12 lg:col-span-6">
                <label>Người dùng</label>
                <input type="text" id="Customer_Name" class="form-control">
            </div>
            <div class="col-span-12 lg:col-span-6">
                <input type="hidden" id="Product_Name" class="form-control">
            </div>
        </div>
        <div class="grid mt-3">
            <div class="w-full sm:w-auto flex mt-5 sm:mt-0 ml-auto">
                <button type="button" onclick="onResetSearch();" class="btn btn-danger text-white shadow-md mr-2">Xóa tìm kiếm</button>
                <button type="button" onclick="onSearch();" class="btn btn-success text-white shadow-md mr-2">Tìm kiếm</button>
            </div>
        </div>
    </div>
</div>
<div class="intro-y box p-5 mt-5">
    <div id="main-grid"></div>
    <script>
        var dateFormatter = function (cell, formatterParams) {
            var value = cell.getValue();

            if (value) {
                value = moment(value).format("DD/MM/YYYY HH:mm:ss");
            }

            return value;
        }
        var table = new Tabulator("#main-grid", {
            layout: "fitDataFill",
            ajaxURL: "@Html.Raw(Url.Action("List", "Rating"))",
            ajaxConfig: "post",
            ajaxRequesting: function (url, params) {
                params.Customer_Name = $('#Customer_Name').val(),
                params.Product_Name = $('#Product_Name').val();
            },
            ajaxResponse: function (url, params, response) {
                return response;
            },
            ajaxFiltering: true,
            paginationSize: 10,
            paginationSizeSelector: [10, 25, 50, 100],
            pagination: "remote",
            paginationDataSent: {
                "size": "pageSize",
                "page": "page",
            },
            paginationDataReceived: {
                "data": "Data",
                "last_page": "Total"
            },
            placeholder: "Chưa có dữ liệu",
            columns: [
                { title: "Id", field: "Id", sorter: "string", width: 100 },
                {
                    title: "Tên khách hàng", field: "Customer_Name", sorter: "string", width: 180, formatter(cell, formatterParams) {
                        return `<a href="../Admin/Rating/Update/${cell.getData().Id}" class="text-theme-1 dark:text-theme-10"> ${cell.getData().Customer_Name}</a>`
                    }
                },
                {
                    title: "Tên sản phẩm", field: "Product_Name", sorter: "string", width: 280, formatter(cell, formatterParams) {
                        return `<a href="../Admin/Rating/Update/${cell.getData().Id}" class="text-theme-1 dark:text-theme-10"> ${cell.getData().Product_Name}</a>`
                    }
                },
                {
                    title: "Số sao", field: "Rate", sorter: "string", width: 100, formatter(cell, formatterParams) {
                        return `<a href="../Admin/Rating/Update/${cell.getData().Id}" class="text-theme-1 dark:text-theme-10"> ${cell.getData().Rate}</a>`
                    }
                },
                {
                    title: "Bình luận", field: "Comment", sorter: "string", width: 280, formatter(cell, formatterParams)
                    {
                        return `<a href="../Rating/Update/${cell.getData().Id}" class="text-theme-1 dark:text-theme-10"> ${cell.getData().Comment}</a>`
                    }
                },
            ],
        });
        let onSearch = (e) => {
            table.setData();
        }
        let onResetSearch = (e) => {
            $('#Customer_Name').val('');
            table.setData();
        }
    </script>
</div>


